load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@bazel_gazelle//:def.bzl", "gazelle")

# gazelle:prefix github.com/SaveTheRbtz/zstd-seekable-format-go
gazelle(name = "gazelle")

gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go.mod",
        "-to_macro=deps.bzl%go_dependencies",
        "-prune",
        "-build_directives=gazelle:exclude **/**_test.go,gazelle:exclude testing,gazelle:exclude **/testdata",
    ],
    command = "update-repos",
)

go_library(
    name = "zstd-seekable-format-go",
    srcs = [
        "decoder.go",
        "doc.go",
        "encoder.go",
        "reader.go",
        "reader_options.go",
        "seekable.go",
        "writer.go",
        "writer_options.go",
    ],
    importpath = "github.com/SaveTheRbtz/zstd-seekable-format-go",
    visibility = ["//visibility:public"],
    deps = [
        "//env",
        "@com_github_cespare_xxhash_v2//:xxhash",
        "@com_github_google_btree//:btree",
        "@com_github_hashicorp_golang_lru_v2//:go_default_library",
        "@org_uber_go_atomic//:atomic",
        "@org_uber_go_multierr//:multierr",
        "@org_uber_go_zap//:zap",
        "@org_uber_go_zap//zapcore",
    ],
)

go_test(
    name = "zstd-seekable-format-go_test",
    size = "medium",
    srcs = [
        "decoder_test.go",
        "doc_test.go",
        "encoder_test.go",
        "example_test.go",
        "reader_fuzz_test.go",
        "reader_test.go",
        "seekable_fuzz_test.go",
        "seekable_test.go",
        "writer_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":zstd-seekable-format-go"],
    race = "on",
    deps = [
        "//env",
        "@com_github_klauspost_compress//zstd",
        "@com_github_stretchr_testify//assert",
    ],
)
